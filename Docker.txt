Docker:

	Docker is an open source centralized platform designed to create, deploy and run application.
	
	Docker uses container on the host OS to run applications.it allows applications to use the same linux kernel as system on the host computer rather than creating a whole virtual OS.
	
	we can install docker on any OS but docker engine runs natively on linux distribution.
	
	Docker written in google go laguage.
	
	Docker is a tool that performs OS level virtualization also known as containerization.
	
	before docker many users faces problem that a particular code is running in developer's system but not in the users system.
	
	docker was first relased in marcj 2013.
	
	Docker is a set of platform as a service that uses OS levele virtualization where as VMWare uses Hardwarelevel Virtualization.

what was the challenge?
	1.Compatability/Dependency
	2.Long set up time of required s/w
	3.Different dev/text/prod evironment.
	
How to solve this problem:
	1.containerize application.
	2.run each application solely in seperate container.
	
So what is container?
	isolated environment with processing with different network/mounts.
	
	shares same OS karnel(OS in Linux).
	
	Stack will be like below:
	
	-----------------------------------
	|Application+   |  Application+   |
	|Lib+dependency |  Libs+Dependency| 
	-----------------------------------
	          Docker Engine
	-----------------------------------
                     OS
	-----------------------------------
	       Hardware Infrasturcture
	-----------------------------------
	
Advantages of Docker:
	
	1.No Pre allocation of RAM
	
	2.CI efficiency->docker enables you ro build a container image and use that same image across every step of the deployment process.
	
	3.less cost
	
	4.light weight
	
	5.can run on physical H/W ,Virtual H/W or on cloud
	
	5.you can re-use the image
	
	6.it takes very less time to create container.
	
	
Limitation:

	1.both dev and test OS must be same then image will work.
	
	likewise dev has created in Ubuntu and testing using centos then it will not work.
	
	2.cross platform compatability.
	
	
Docker Deamon:
	1.runs on host os
	
	2.responsible for running containers to manges docker services
	
	3.can communicate with other deamons

Docker client:(through CLI):

	1.docker users can intaract with docker through a client
	
	2.docker client uses commands and REST apis to communicate with docker deamon.
	
	3.when a client runs any sers command on the docker client terminal the client terminal sends these docker commands to docker deamon.
	
	4.can communicate with other docker deamon.
	
Docker Host:
	
	1.Docker host is used to provide an environment to execute and run applications.
	
	2.It conatains the docker deamon,images,conatainers,networks and storages.
	

	
DockerHub: 

	Central Repo for Docker;
	
	storages of docker image.

	Public Registry:
	Private Registry:
	
Docker Image:
	
	Package or template to create one or more container.
	
Docker container:

	Docker container holds the entire package that is needed to run the application.
	
	containers are like virtual machine.
	
	images becomes container when the run on docker
	
In windows docker installed in Liux VM.

Docker Cmd:

docker version
docker images
docker run ubuntu
docker run -it ubuntu
docker stats
docker system df
docker ps -aq(all running docker container)
docker system prune

1. to see all images presents in your local

#docker images

2.to find out images in docker hub

#docker search <S/W name>

3.to download images from docker hub to local machine;

#docker pull <S/W name>

4.to give name to container(-i=intractive mode,t=terminal)

#docker run -it --name <any name of container> <S/W name> /bin/bash

5.to check service is strated or not

#service docker status
#docker info

#service docker start(for AWS/Cloud docker engine initially)

6.to start container

#docker start <container-name>

7.to see all container(ps=process status)

#docker ps -a

#docker ps (only give running containers)


8.to stop container

#docker stop <container-name>


9.to delete container

#docker rm <container-name>

10.check which version of os running

#cat /etc/os-release



